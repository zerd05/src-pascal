{*Дан целочисленный массив размера N.
 Проверить, чередуются ли в нем четные и нечетные числа.
 Если чередуются, то вывести 0, 
 если нет, то вывести порядковый номер первого элемента,
 нарушающего закономерность.
*}
program zzz;

const
  c = 500;

var
  i, n, h: integer;
  m: array[1..c] of integer;

begin
  h := 0;
  writeln('введите количество значений массива');
  readln(n);
  for i := 1 to n do
  begin
    writeln('число N:', i);
    readln(m[i]);
  end;
  h := 0;
  for i := 1 to n - 1 do
    
    if abs(m[i] - m[i + 1]) mod 2 = 0 then
    begin
      h := i;
      break
    end;
  writeln(h);
  
  
end.

{* Если решать эту задачу в лоб(то есть начать проверять каждый элемент),
 то придётся делать два условия(когда первое число — чётное и когда первое
 число — нечётное). Но можно решить эту задачу намного проще.
 Достаточно просто заметить, что если оба числа чётные или нечётные,
 то их разность чётная(например: 5 — 3 = 2; 4 — 2 = 2). Если же одно
 число чётное, а другое — нечётное, то разность нечётная(например: 5 — 2 = 3).
 Тогда программа пишется очень просто.*}